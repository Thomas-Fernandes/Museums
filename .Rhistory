proportions <- matrix(c(1 - sum(tabac$fumeur) / nrow(tabac), sum(tabac$fumeur) / nrow(tabac),
1 - sum(tabac$probleme_pulmonaire) / nrow(tabac), sum(tabac$probleme_pulmonaire) / nrow(tabac)),
nrow = 2, ncol = 2)
# Barplot avec toutes les barres sur le même graphique
barplot(as.vector(proportions),
main = "Proportions de : fumeurs, personnes avec problèmes pulmonaires",
xlab = "Catégories",
ylab = "Proportion",
ylim = c(0, 1),
space = 5,
width = c(0.01, 0.01, 0.01, 0.01),
col = c("#6262e3", "#6262e3", "#50977d", "#50977d"),
names.arg = c("Non fumeur", "Fumeur", "Sans pb pul.", "Avec pb pul."),
cex.names = 0.8)
# Ajouter des légendes pour indiquer les groupes de barres
legend("topright", legend = c("Fumeur", "Problème pulmonaire"), fill = c("#6262e3", "#50977d"))
attach(tabac)
(table_contingence <- table(tabac$fumeur, tabac$probleme_pulmonaire))
barplot(table_contingence, main="Distribution Jointe de Fumeurs et Problèmes Pulmonaires",
xlab="Fumeur", ylab="Problème Pulmonaire", legend=TRUE)
# Distribution jointe de fumeur et problème pulmonaire
table(tabac$fumeur, tabac$probleme_pulmonaire) / nrow(tabac)
# Distribution conditionnelle de fumeur sachant problème pulmonaire
(distrib_conditionnelle_1 <- table_contingence / rowSums(table_contingence))
# Distribution conditionnelle de problème pulmonaire sachant fumeur
t((distrib_conditionnelle_2 <- t(table_contingence) / colSums(table_contingence)))
#plot
plot(factor(probleme_pulmonaire), factor(fumeur), xlab="probleme pulmonaire",ylab="fumeur")
attach(tabac)
(table_contingence <- table(tabac$fumeur, tabac$probleme_pulmonaire))
barplot(table_contingence, main="Distribution Jointe de Fumeurs et Problèmes Pulmonaires",
xlab="Fumeur", ylab="Problème Pulmonaire", legend=TRUE)
# Distribution jointe de fumeur et problème pulmonaire
table(tabac$fumeur, tabac$probleme_pulmonaire) / nrow(tabac)
# Distribution conditionnelle de fumeur sachant problème pulmonaire
(distrib_conditionnelle_1 <- table_contingence / rowSums(table_contingence))
# Distribution conditionnelle de problème pulmonaire sachant fumeur
t((distrib_conditionnelle_2 <- t(table_contingence) / colSums(table_contingence)))
#plot
plot(factor(probleme_pulmonaire), factor(fumeur), xlab="probleme pulmonaire",ylab="fumeur")
attach(tabac)
(table_contingence <- table(tabac$fumeur, tabac$probleme_pulmonaire))
barplot(table_contingence, main="Distribution Jointe de Fumeurs et Problèmes Pulmonaires",
xlab="Fumeur", ylab="Problème Pulmonaire", legend=TRUE)
# Distribution jointe de fumeur et problème pulmonaire
table(tabac$fumeur, tabac$probleme_pulmonaire) / nrow(tabac)
# Distribution conditionnelle de fumeur sachant problème pulmonaire
(distrib_conditionnelle_1 <- table_contingence / rowSums(table_contingence))
# Distribution conditionnelle de problème pulmonaire sachant fumeur
t((distrib_conditionnelle_2 <- t(table_contingence) / colSums(table_contingence)))
#plot
plot(factor(probleme_pulmonaire), factor(fumeur), xlab="probleme pulmonaire",ylab="fumeur")
plot(factor(fumeur), factor(probleme_pulmonaire), xlab="fumeur",ylab="probleme pulmonaire")
# Analogue
plot(factor(probleme_pulmonaire), factor(fumeur), xlab="probleme pulmonaire",ylab="fumeur")
plot(factor(fumeur), factor(probleme_pulmonaire), xlab="fumeur",ylab="probleme pulmonaire")
# Distribution conditionnelle de fumeur sachant problème pulmonaire
barplot(table(tabac$fumeur, tabac$probleme_pulmonaire) / sum(tabac$probleme_pulmonaire),
main = "Distribution conditionnelle de fumeur sachant problème pulmonaire",
xlab = "Fumeur",
ylab = "Proportion",
ylim = c(0, 2),
space = 5,
width = c(0.01, 0.01),
col = c("#6262e3", "#50977d"),
names.arg = c("Non fumeur", "Fumeur"),
cex.names = 0.8)
# Distribution conditionnelle de problème pulmonaire sachant fumeur
barplot(table(tabac$fumeur, tabac$probleme_pulmonaire) / sum(tabac$fumeur),
main = "Distribution conditionnelle de problème pulmonaire sachant fumeur",
xlab = "Problème pulmonaire",
ylab = "Proportion",
ylim = c(0, 2),
space = 5,
width = c(0.01, 0.01),
col = c("#6262e3", "#50977d"),
names.arg = c("Sans pb pul.", "Avec pb pul."),
cex.names = 0.8)
# Distribution conditionnelle de fumeur sachant problème pulmonaire
(distrib_conditionnelle_1 <- table_contingence / rowSums(table_contingence))
# Distribution conditionnelle de problème pulmonaire sachant fumeur
t((distrib_conditionnelle_2 <- t(table_contingence) / colSums(table_contingence)))
plot(x = factor(fumeur), y = factor(probleme_pulmonaire), xlab="fumeur",ylab="probleme pulmonaire")
View(tabac)
t((distrib_conditionnelle_2 <- table_contingence/ colSums(table_contingence)))
setwd("D:/Documents/Drive/Ecole/M1/S1/Bases de données/Projet")
setwd("C:/Users/thoma/Desktop/Github/Museums")
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
View(County_code)
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`)
#musees
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`)
#institutions
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`)
#locale code (NCES)
localecode_nces <- museums %>%
select(`Locale Code (NCES)`) %>%
unique() %>%
mutate(Nom = case_when(
`Locale Code (NCES)` == 1 ~ "City",
`Locale Code (NCES)` == 2 ~ "Suburb",
`Locale Code (NCES)` == 3 ~ "Town",
`Locale Code (NCES)` == 4 ~ "Rural"
))
#State Code (FIPS)
statecode_FIPS <- read_csv("Data/Raw/State_Code_FIPS.csv") %>%
rename(`ID_State` = `Country-level FIPS code`,
`Nom` = `Place name`)
#Region Code (AAM)
regioncode_aam <- museums %>%
select(`Region Code (AAM)`) %>%
unique() %>%
rename(`ID_Region` = `Region Code (AAM)`) %>%
mutate(Nom = case_when(
`ID_Region` == 1 ~ "New England",
`ID_Region` == 2 ~ "Mid-Atlantic",
`ID_Region` == 3 ~ "Southeastern",
`ID_Region` == 4 ~ "Midwest",
`ID_Region` == 5 ~ "Montain Plains",
`ID_Region` == 6 ~ "Western"
))
#County Code (FIPS)
countycode_fips <- County_code %>%
rename(`ID_County` = `Country-level FIPS code`,
`Nom` = `Place name`)
#ville
ville <- museums %>%
select(`Zip Code (Administrative Location)`, `City (Administrative Location)`) %>%
unique() %>%
rename(`Nom` = `City (Administrative Location)`,
`ID_ZIP_Code` = `Zip Code (Administrative Location)`)
#finances (on doit créer la PK, on fait un AUTO_INCREMENT)
finances <- museums %>%
select(`Tax Period`, `Income`, `Revenue`) %>%
mutate(`ID_Finances` = row_number()) %>%
relocate(`ID_Finances`, .before = 1)
#musee
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`)
#geocodes
geocodes <- museums %>%
select(`Latitude (Administrative Location)`, `Longitude (Administrative Location)`) %>%
rename(`Latitude` = `Latitude (Administrative Location)`,
`Longitude` = `Longitude (Administrative Location)`)
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
#Pré-traitement
#museums <- museums[!is.na(museums$`County Code (FIPS)`),]
#museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#Ccolonne "County Code (FIPS)" en 3 caractères (ex: 001)
#museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
#museums$`State Code (FIPS)` <- formatC(museums$`State Code (FIPS)`, width = 2, flag = "0")
#Numéro de state code (FIPS) au début du county code (FIPS)
#museums$`County Code (FIPS)` <- paste0(museums$`State Code (FIPS)`, museums$`County Code (FIPS)`)
#On compte combien de musée n'ont pas de coordonnées
#sum(is.na(museums$`Tax Period`))
#-------------#
#   Tables    #
#-------------#
#musees
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`)
#institutions
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`)
#locale code (NCES)
localecode_nces <- museums %>%
select(`Locale Code (NCES)`) %>%
unique() %>%
mutate(Nom = case_when(
`Locale Code (NCES)` == 1 ~ "City",
`Locale Code (NCES)` == 2 ~ "Suburb",
`Locale Code (NCES)` == 3 ~ "Town",
`Locale Code (NCES)` == 4 ~ "Rural"
))
#State Code (FIPS)
statecode_FIPS <- read_csv("Data/Raw/State_Code_FIPS.csv") %>%
rename(`ID_State` = `Country-level FIPS code`,
`Nom` = `Place name`)
#Region Code (AAM)
regioncode_aam <- museums %>%
select(`Region Code (AAM)`) %>%
unique() %>%
rename(`ID_Region` = `Region Code (AAM)`) %>%
mutate(Nom = case_when(
`ID_Region` == 1 ~ "New England",
`ID_Region` == 2 ~ "Mid-Atlantic",
`ID_Region` == 3 ~ "Southeastern",
`ID_Region` == 4 ~ "Midwest",
`ID_Region` == 5 ~ "Montain Plains",
`ID_Region` == 6 ~ "Western"
))
#County Code (FIPS)
countycode_fips <- County_code %>%
rename(`ID_County` = `Country-level FIPS code`,
`Nom` = `Place name`)
#ville
ville <- museums %>%
select(`Zip Code (Administrative Location)`, `City (Administrative Location)`) %>%
unique() %>%
rename(`Nom` = `City (Administrative Location)`,
`ID_ZIP_Code` = `Zip Code (Administrative Location)`)
#finances (on doit créer la PK, on fait un AUTO_INCREMENT)
finances <- museums %>%
select(`Tax Period`, `Income`, `Revenue`) %>%
mutate(`ID_Finances` = row_number()) %>%
relocate(`ID_Finances`, .before = 1)
#musee
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`)
View(musee)
View(type)
#musees
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`) %>%
mutate(`ID_TypeMusee` = row_number()) %>%
relocate(`ID_TypeMusee`, .before = 1)
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`) %>%
mutate(`ID_Type` = row_number()) %>%
relocate(`ID_Type`, .before = 1)
View(museums)
View(musee)
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`)
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`)
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`ID_Type` = type$ID_Type[match(`Museum Type`, type$TypeMusee)])
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`RefType` = type$ID_Type[match(`Museum Type`, type$TypeMusee)])
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`RefType` = type$ID_Type[match(`Museum Type`, type$TypeMusee)]) %>%
select(-`Museum Type`)
View(institution)
#institutions
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`) %>%
mutate(`ID_Institution` = row_number()) %>%
relocate(`ID_Institution`, .before = 1) %>%
View(institution)
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`) %>%
mutate(`ID_Institution` = row_number()) %>%
relocate(`ID_Institution`, .before = 1) %>%
clear
#institutions
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`) %>%
mutate(`ID_Institution` = row_number()) %>%
relocate(`ID_Institution`, .before = 1) %>%
clear
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
#Pré-traitement
#museums <- museums[!is.na(museums$`County Code (FIPS)`),]
#museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#Ccolonne "County Code (FIPS)" en 3 caractères (ex: 001)
#museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
#museums$`State Code (FIPS)` <- formatC(museums$`State Code (FIPS)`, width = 2, flag = "0")
#Numéro de state code (FIPS) au début du county code (FIPS)
#museums$`County Code (FIPS)` <- paste0(museums$`State Code (FIPS)`, museums$`County Code (FIPS)`)
#On compte combien de musée n'ont pas de coordonnées
#sum(is.na(museums$`Tax Period`))
#-------------#
#   Tables    #
#-------------#
#musees
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`) %>%
mutate(`ID_Type` = row_number()) %>%
relocate(`ID_Type`, .before = 1)
#institutions
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`) %>%
mutate(`ID_Institution` = row_number()) %>%
relocate(`ID_Institution`, .before = 1) %>%
clear
View(museums)
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`) %>%
mutate(`ID_Institution` = row_number()) %>%
relocate(`ID_Institution`, .before = 1)
View(institution)
#musee
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`RefType` = type$ID_Type[match(`Museum Type`, type$TypeMusee)]) %>%
select(-`Museum Type`) %>% #Ajout de la colonne RefInstitution
mutate(`RefInstitution` = institution$ID_Institution[match(`Nom`, institution$`Nom Institution`)])
View(musee)
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`, `Institution Name`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`RefType` = type$ID_Type[match(`Museum Type`, type$TypeMusee)]) %>%
select(-`Museum Type`) %>% #Ajout de la colonne RefInstitution
mutate(`RefInstitution` = institution$ID_Institution[match(`Institution Name`, institution$`Nom Institution`)])
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`, `Institution Name`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`RefType` = type$ID_Type[match(`Museum Type`, type$TypeMusee)]) %>%
select(-`Museum Type`) %>%
mutate(`RefInstitution` = institution$ID_Institution[match(`Institution Name`, institution$`Nom Institution`)]) %>%
select(-`Institution Name`)
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
#Pré-traitement
#museums <- museums[!is.na(museums$`County Code (FIPS)`),]
#museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#Ccolonne "County Code (FIPS)" en 3 caractères (ex: 001)
#museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
#museums$`State Code (FIPS)` <- formatC(museums$`State Code (FIPS)`, width = 2, flag = "0")
#Numéro de state code (FIPS) au début du county code (FIPS)
#museums$`County Code (FIPS)` <- paste0(museums$`State Code (FIPS)`, museums$`County Code (FIPS)`)
#On compte combien de musée n'ont pas de coordonnées
#sum(is.na(museums$`Tax Period`))
#-------------#
#   Tables    #
#-------------#
#musees
type <- museums %>%
select(`Museum Type`) %>%
unique() %>%
rename(TypeMusee = `Museum Type`) %>%
mutate(`ID_Type` = row_number()) %>%
relocate(`ID_Type`, .before = 1)
#institutions
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom Institution` = `Institution Name`) %>%
mutate(`ID_Institution` = row_number()) %>%
relocate(`ID_Institution`, .before = 1)
#locale code (NCES)
localecode_nces <- museums %>%
select(`Locale Code (NCES)`) %>%
unique() %>%
mutate(Nom = case_when(
`Locale Code (NCES)` == 1 ~ "City",
`Locale Code (NCES)` == 2 ~ "Suburb",
`Locale Code (NCES)` == 3 ~ "Town",
`Locale Code (NCES)` == 4 ~ "Rural"
))
#State Code (FIPS)
statecode_FIPS <- read_csv("Data/Raw/State_Code_FIPS.csv") %>%
rename(`ID_State` = `Country-level FIPS code`,
`Nom` = `Place name`)
#Region Code (AAM)
regioncode_aam <- museums %>%
select(`Region Code (AAM)`) %>%
unique() %>%
rename(`ID_Region` = `Region Code (AAM)`) %>%
mutate(Nom = case_when(
`ID_Region` == 1 ~ "New England",
`ID_Region` == 2 ~ "Mid-Atlantic",
`ID_Region` == 3 ~ "Southeastern",
`ID_Region` == 4 ~ "Midwest",
`ID_Region` == 5 ~ "Montain Plains",
`ID_Region` == 6 ~ "Western"
))
#County Code (FIPS)
countycode_fips <- County_code %>%
rename(`ID_County` = `Country-level FIPS code`,
`Nom` = `Place name`)
#ville
ville <- museums %>%
select(`Zip Code (Administrative Location)`, `City (Administrative Location)`) %>%
unique() %>%
rename(`Nom` = `City (Administrative Location)`,
`ID_ZIP_Code` = `Zip Code (Administrative Location)`)
#finances (on doit créer la PK, on fait un AUTO_INCREMENT)
finances <- museums %>%
select(`Tax Period`, `Income`, `Revenue`, `Museum ID`) %>%
mutate(`ID_Finances` = row_number()) %>%
relocate(`ID_Finances`, .before = 1)
#musee
musee <- museums %>%
select(`Museum ID`, `Museum Name`, `Phone Number`, `Street Address (Administrative Location)`, `Museum Type`, `Institution Name`) %>%
rename(`ID_Musee` = `Museum ID`,
`Nom` = `Museum Name`,
`Telephone` = `Phone Number`,
`Adresse` = `Street Address (Administrative Location)`) %>%
mutate(`RefType` = type$ID_Type[match(`Museum Type`, type$TypeMusee)]) %>%
select(-`Museum Type`) %>%
mutate(`RefInstitution` = institution$ID_Institution[match(`Institution Name`, institution$`Nom Institution`)]) %>%
select(-`Institution Name`)
#-------------------#
#   Foreign Keys    #
#-------------------#
View(County_code)
View(countycode_fips)
View(institution)
View(localecode_nces)
View(musee)
View(regioncode_aam)
View(regioncode_aam)
View(statecode_FIPS)
View(type)
View(ville)
View(ville)
View(statecode_FIPS)
