mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
effectifs <- table(restaurant$nb.convives)
#Il n'y pas de var1 = 5, avec une fréquence de 0, on la rajoute
effectifs <- c(effectifs, 0)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
effectifs
??table
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
effectifs <- table(restaurant$nb.convives)
effectifs
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
View(restaurant)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
effectifs
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- as.factor(restaurant$nb.convives)
effectifs <- table(restaurant$nb.convives)
#Il n'y pas de var1 = 5, avec une fréquence de 0, on la rajoute
effectifs <- c(effectifs, 0)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
View(restaurant)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- as.factor(restaurant$nb.convives, levels = 1:6)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- as.factor(restaurant$nb.convives, levels = 1:6)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
#Il n'y pas de var1 = 5, avec une fréquence de 0, on la rajoute
effectifs <- c(effectifs, 0)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
#Il n'y pas de var1 = 5, avec une fréquence de 0, on la rajoute
effectifs <- c(effectifs, 0)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:5)
effectifs <- table(restaurant$nb.convives)
#Il n'y pas de var1 = 5, avec une fréquence de 0, on la rajoute
effectifs <- c(effectifs, 0)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
#Il n'y pas de var1 = 5, avec une fréquence de 0, on la rajoute
effectifs <- c(effectifs, 0)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
View(restaurant)
effectifs
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
space = 20)
box()
restaurant <- data.frame(
nb.convives = c(1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 6)
)
population <- nrow(restaurant)
effectif.total <- sum(restaurant$nb.convives)
#La variable étudiée est le nombre de convives elle est de type quantitative discrète
mode <- max(restaurant$nb.convives)
mediane <- median(restaurant$nb.convives)
moyenne <- mean(restaurant$nb.convives)
restaurant$nb.convives <- factor(restaurant$nb.convives, levels = 1:6)
effectifs <- table(restaurant$nb.convives)
barplot(effectifs,
main = "Distribution du nombre de convives",
xlab = "Nombre de convives",
ylab = "Effectifs",
ylim = c(0, 6),
space = 20)
box()
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
View(tabac)
View(tabac)
View(tabac)
View(tabac)
View(tabac)
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
#Ajout d'une variable fumeur de type binaire
tabac$fumeur <- ifelse(tabac$tabac == "oui", 1, 0)
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
#Ajout d'une variable fumeur de type binaire
tabac$fumeur <- ifelse(tabac$tabagisme_passif == TRUE, 1, 0)
View(tabac)
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
tabac$fumeur <- ifelse(tabac$tabagisme_passif == TRUE, 1, 0)
#Calculer les fréquences observées pour les modalités des variables "fumeur" et "problème pulmonaire"
freq.fumeur <- table(tabac$fumeur)
freq.pulmonaire <- table(tabac$problème_pulmonaire)
freq.fumeur
freq.pulmonaire
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
tabac$fumeur <- ifelse(tabac$tabagisme_passif == TRUE, 1, 0)
#Calculer les fréquences observées pour les modalités des variables "fumeur" et "problème pulmonaire"
freq.fumeur <- table(tabac$fumeur)
freq.pulmonaire <- table(tabac$probleme_pulmonaire)
freq.pulmonaire <- table(tabac$probleme_pulmonaire)
freq.pulmonaire
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
tabac$fumeur <- ifelse(tabac$tabagisme_passif == TRUE, 1, 0)
#Calculer les fréquences observées pour les modalités des variables "fumeur" et "problème pulmonaire"
freq.fumeur <- table(tabac$fumeur)
freq.pulmonaire <- table(tabac$probleme_pulmonaire)
#représenter les distributions de proportions de ces variables
barplot(freq.fumeur,
main = "Distribution du tabagisme passif",
xlab = "Tabagisme passif",
ylab = "Effectifs",
ylim = c(0, 6),
space = 20)
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
tabac$fumeur <- ifelse(tabac$tabagisme_passif == TRUE, 1, 0)
#Calculer les fréquences observées pour les modalités des variables "fumeur" et "problème pulmonaire"
freq.fumeur <- table(tabac$fumeur)
freq.pulmonaire <- table(tabac$probleme_pulmonaire)
#représenter les distributions de proportions de ces variables
prop <- prop.table(freq.fumeur)
library(readr)
tabac <- read_csv("tabac.csv", show_col_types = FALSE)
head(tabac)
str(tabac)
summary(tabac)
tabac$fumeur <- ifelse(tabac$tabagisme_passif == TRUE, 1, 0)
#Calculer les fréquences observées pour les modalités des variables "fumeur" et "problème pulmonaire"
freq.fumeur <- table(tabac$fumeur)
freq.pulmonaire <- table(tabac$probleme_pulmonaire)
#représenter les distributions de proportions de ces variables
prop <- prop.table(freq.fumeur)
prop
View(tabac)
setwd("C:/Users/thoma/Desktop/Github/Museums")
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County code.csv")
View(County_code)
County_code <- read_csv("Data/Raw/County code.csv")
View(County_code)
County_code <- read_csv("Data/Raw/County code.csv")
View(County_code)
??readr::read_csv
??read_csv
County_code <- read_csv("Data/Raw/County code.csv", sep = ";")
library(readr)
County_code <- read_csv("Data/Raw/County code.csv", sep = ";")
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County code.csv", sep = ";")
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County code.csv")
View(County_code)
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County code.csv")
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
View(County_code)
View(County_code)
museums <- read_csv("Data/Raw/museums.csv")
View(museums)
museums$State.Code..FIPS.[museums$State.Code..FIPS. == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
View(museums)
#On met la colonne "County Code (FIPS)" en 3 caractères tout le temps (ex: 001)
museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
View(museums)
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
#Compte les lignes ayant state code = NA
sum(is.na(museums$`State Code (FIPS)`))
#Compte les lignes ayant Locale Code (NCES) = NA
sum(is.na(museums$`Locale Code (NCES)`))
#Compte les lignes ayant Region Code (AAM) = NA
sum(is.na(museums$`Region Code (AAM)`))
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
museums <- museums[!is.na(museums$`County Code (FIPS)`),]
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
#Compte les lignes ayant state code = NA
sum(is.na(museums$`State Code (FIPS)`))
#Compte les lignes ayant Locale Code (NCES) = NA
sum(is.na(museums$`Locale Code (NCES)`))
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
museums <- museums[!is.na(museums$`County Code (FIPS)`),]
#Compte les lignes ayant county code = NA
sum(is.na(museums$`County Code (FIPS)`))
#Compte les lignes ayant state code = NA
sum(is.na(museums$`State Code (FIPS)`))
#Compte les lignes ayant Locale Code (NCES) = NA
sum(is.na(museums$`Locale Code (NCES)`))
#On les supprime
museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#Compte les lignes ayant Locale Code (NCES) = NA
sum(is.na(museums$`Locale Code (NCES)`))
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
museums <- museums[!is.na(museums$`County Code (FIPS)`),]
museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#On met la colonne "County Code (FIPS)" en 3 caractères tout le temps (ex: 001)
museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
View(museums)
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
museums <- museums[!is.na(museums$`County Code (FIPS)`),]
museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#Ccolonne "County Code (FIPS)" en 3 caractères (ex: 001)
museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
museums$`State Code (FIPS)` <- formatC(museums$`State Code (FIPS)`, width = 2, flag = "0")
#Numéro de state code (FIPS) au début du county code (FIPS)
museums$`County Code (FIPS)` <- paste0(museums$`State Code (FIPS)`, museums$`County Code (FIPS)`)
View(museums)
#On compte combien de musée n'ont pas de coordonnées
sum(is.na(museums$`Longitude`))
#On compte combien de musée n'ont pas de coordonnées
sum(is.na(museums$`Latitude`))
#On compte combien de musée n'ont pas de coordonnées
sum(is.na(museums$`State (Administrative Location)`))
#On compte combien de musée n'ont pas de coordonnées
sum(is.na(museums$`Tax Period`))
library(readr)
library(readxl)
library(dplyr)
#------------------#
# Importation data #
#------------------#
County_code <- read_csv("Data/Raw/County-code.csv")
museums <- read_csv("Data/Raw/museums.csv")
# Dans le fichier museums, lorsque "State Code (FIPS)" = 60, on met 6, 80 on met 8 et 90 on met 9
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 60] <- 6
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 80] <- 8
museums$`State Code (FIPS)`[museums$`State Code (FIPS)` == 90] <- 9
museums <- museums[!is.na(museums$`County Code (FIPS)`),]
museums <- museums[!is.na(museums$`Locale Code (NCES)`),]
#Ccolonne "County Code (FIPS)" en 3 caractères (ex: 001)
museums$`County Code (FIPS)` <- formatC(museums$`County Code (FIPS)`, width = 3, flag = "0")
museums$`State Code (FIPS)` <- formatC(museums$`State Code (FIPS)`, width = 2, flag = "0")
#Numéro de state code (FIPS) au début du county code (FIPS)
museums$`County Code (FIPS)` <- paste0(museums$`State Code (FIPS)`, museums$`County Code (FIPS)`)
#On compte combien de musée n'ont pas de coordonnées
sum(is.na(museums$`Tax Period`))
33072-8882
#On fait une table avec les types de musées (en unique)
type <- museums %>%
select(`Museum Type`) %>%
unique()
View(type)
#On fait une table avec les institutions, en unique
institution <- museums %>%
select(`Institution Name`) %>%
unique()
View(institution)
#On créer une table pour les locale code (NCES)
locale <- museums %>%
select(`Locale Code (NCES)`) %>%
unique()
View(locale)
rm(locale)
#On créer une table pour les locale code (NCES)
localecode_nces <- museums %>%
select(`Locale Code (NCES)`) %>%
unique()
View(localecode_nces)
#On créer une table pour les locale code (NCES)
localecode_nces <- museums %>%
select(`Locale Code (NCES)`) %>%
unique() %>%
mutate(Description = case_when(
`Locale Code (NCES)` == 1 ~ "City",
`Locale Code (NCES)` == 2 ~ "Suburb",
`Locale Code (NCES)` == 3 ~ "Town",
`Locale Code (NCES)` == 4 ~ "Rural"
))
View(localecode_nces)
View(type)
View(institution)
#On fait une table avec les institutions, en unique
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`\`Institution Name\`` = `Nom institution`)
#On fait une table avec les institutions, en unique
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom institution` = `\`Institution Name\``)
#On fait une table avec les institutions, en unique
institution <- museums %>%
select(`Institution Name`) %>%
unique() %>%
rename(`Nom institution` = `Institution Name)
gc()
kill
